import tkinter as tk
from tkinter import messagebox

class MatrixonRings:
    def __init__(self, matrix, add_op=lambda a, b: a + b, mul_op=lambda a, b: a * b):
        self.matrix = matrix
        self.add_op = add_op
        self.mul_op = mul_op
        self.rows = len(matrix)
        self.cols = len(matrix[0])

    def __add__(self, other):
        if self.rows != other.rows or self.cols != other.cols:
            raise ValueError("Mismatched dimensions")
        result_matrix = [
            [self.add_op(self.matrix[i][j], other.matrix[i][j]) for j in range(self.cols)]
            for i in range(self.rows)
        ]
        return MatrixonRings(result_matrix, self.add_op, self.mul_op)

    def matmul(self, other):
        if self.cols != other.rows:
            raise ValueError("Mismatched dimensions")
        result_matrix = [[0 for _ in range(other.cols)] for _ in range(self.rows)]
        for i in range(self.rows):
            for j in range(other.cols):
                for k in range(self.cols):
                    result_matrix[i][j] = self.add_op(
                        result_matrix[i][j],
                        self.mul_op(self.matrix[i][k], other.matrix[k][j])
                    )
        return MatrixonRings(result_matrix, self.add_op, self.mul_op)

    def __repr__(self):
        return f"{self.matrix}"


def parse_matrix(input_text):
    """Преобразует строку в матрицу."""
    try:
        rows = input_text.strip().split("\n")
        matrix = [list(map(float, row.split())) for row in rows]
        return matrix
    except Exception:
        raise ValueError("Invalid matrix format")


def perform_operation():
    """Выполняет операцию над матрицами."""
    try:
        # Получаем данные из полей ввода
        matrix1 = parse_matrix(entry_matrix1.get("1.0", tk.END))
        matrix2 = parse_matrix(entry_matrix2.get("1.0", tk.END))

        # Определяем операции на основе выбранного кольца
        ring = ring_var.get()
        if ring == "bool":
            add_op = lambda a, b: a or b
            mul_op = lambda a, b: a and b
        elif ring == "float":
            add_op = lambda a, b: a + b
            mul_op = lambda a, b: a * b
        else:
            raise ValueError("Invalid ring selected")

        # Создаем объекты матриц
        m1 = MatrixonRings(matrix1, add_op, mul_op)
        m2 = MatrixonRings(matrix2, add_op, mul_op)

        # Выполняем выбранную операцию
        operation = operation_var.get()
        if operation == "add":
            result = m1 + m2
        elif operation == "multiply":
            result = m1.matmul(m2)
        else:
            raise ValueError("Invalid operation selected")

        # Отображаем результат
        result_text.set(str(result))
    except Exception as e:
        messagebox.showerror("Error", str(e))


# Создаем главное окно
root = tk.Tk()
root.title("Matrix Operations on Rings")

# Метка и поле ввода для первой матрицы
label_matrix1 = tk.Label(root, text="Enter first matrix:")
label_matrix1.grid(row=0, column=0, padx=10, pady=5, sticky="w")
entry_matrix1 = tk.Text(root, height=5, width=30)
entry_matrix1.grid(row=1, column=0, padx=10, pady=5)

# Метка и поле ввода для второй матрицы
label_matrix2 = tk.Label(root, text="Enter second matrix:")
label_matrix2.grid(row=0, column=1, padx=10, pady=5, sticky="w")
entry_matrix2 = tk.Text(root, height=5, width=30)
entry_matrix2.grid(row=1, column=1, padx=10, pady=5)

# Выбор кольца
ring_var = tk.StringVar(value="float")
radio_bool = tk.Radiobutton(root, text="Boolean Ring (OR/AND)", variable=ring_var, value="bool")
radio_float = tk.Radiobutton(root, text="Float Ring (+/*)", variable=ring_var, value="float")
radio_bool.grid(row=2, column=0, padx=10, pady=5, sticky="w")
radio_float.grid(row=2, column=1, padx=10, pady=5, sticky="w")

# Выбор операции
operation_var = tk.StringVar(value="add")
radio_add = tk.Radiobutton(root, text="Add Matrices", variable=operation_var, value="add")
radio_multiply = tk.Radiobutton(root, text="Multiply Matrices", variable=operation_var, value="multiply")
radio_add.grid(row=3, column=0, padx=10, pady=5, sticky="w")
radio_multiply.grid(row=3, column=1, padx=10, pady=5, sticky="w")

# Кнопка для выполнения операции
button_calculate = tk.Button(root, text="Calculate", command=perform_operation)
button_calculate.grid(row=4, column=0, columnspan=2, pady=10)

# Поле для отображения результата
result_text = tk.StringVar()
label_result = tk.Label(root, textvariable=result_text, relief="sunken", anchor="w", bg="white", width=50, height=5)
label_result.grid(row=5, column=0, columnspan=2, padx=10, pady=5)

# Запуск главного цикла
root.mainloop()